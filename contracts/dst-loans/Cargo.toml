[package]
name = "dst-loans"
version = "0.1.0"
edition = "2021"
authors = ["DIGM Team"]
description = "DST Loan System - Dynamic Interest Rate Implementation"
license = "MIT"
repository = "https://github.com/usexfg/DIGM"
keywords = ["cryptocurrency", "lending", "loans", "dst", "digm", "defi"]
categories = ["cryptocurrency", "finance"]

[dependencies]
# Standard library dependencies
std = { version = "1.0", features = ["collections"] }

# Cryptographic dependencies
sha2 = "0.10"
sha3 = "0.10"
ed25519-dalek = "2.0"
curve25519-dalek = "4.0"

# Serialization dependencies
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
bincode = "1.3"

# Time handling
chrono = { version = "0.4", features = ["serde"] }

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# Logging
log = "0.4"
env_logger = "0.10"

# Testing
proptest = "1.0"
criterion = "0.5"

[dev-dependencies]
# Test utilities
tempfile = "3.0"
mockall = "0.12"

# Benchmarking
criterion = { version = "0.5", features = ["html_reports"] }

[features]
default = ["std"]
std = []
no-std = []

# Enable loan-specific features
dynamic-rates = []
reputation-system = []
collateral-management = []

# Enable testing features
test-utils = []

[profile.release]
# Optimize for size and speed
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"

[profile.dev]
# Faster compilation for development
opt-level = 0
debug = true

[profile.test]
# Optimize tests for speed
opt-level = 1
debug = true

# Benchmark configuration
[[bench]]
name = "loan_benchmarks"
harness = false

# Test configuration
[[test]]
name = "loan_tests"
path = "tests/integration_tests.rs"

# Documentation configuration
[package.metadata.docs.rs]
features = ["std", "dynamic-rates", "reputation-system", "collateral-management"]
targets = ["x86_64-unknown-linux-gnu"]

# Cargo workspace configuration
[workspace]
members = [
    ".",
    "../dst-token",
    "../digm-nft",
    "../stellar-voucher"
]

# Build configuration
[build-dependencies]
# Build-time dependencies if needed
cc = "1.0"

# Custom build script
build = "build.rs"
